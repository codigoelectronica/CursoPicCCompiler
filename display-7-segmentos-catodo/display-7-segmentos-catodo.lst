CCS PCM C Compiler, Version 5.076, 56587               20-Jul-20 10:52

               Filename:   C:\code\pic-c-compiler\display-7-segmentos-catodo\display-7-segmentos-catodo.lst

               ROM used:   69 words (3%)
                           Largest free fragment is 1979
               RAM used:   7 (3%) at main() level
                           8 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   027
0003:  NOP
.................... #include <16F628A.h> 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  3F
0009:  RETLW  06
000A:  RETLW  5B
000B:  RETLW  4F
000C:  RETLW  66
000D:  RETLW  6D
000E:  RETLW  7D
000F:  RETLW  07
0010:  RETLW  7F
0011:  RETLW  67
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT, NOMCLR 
.................... #use delay(clock=4M) 
0012:  MOVLW  23
0013:  MOVWF  04
0014:  BCF    03.7
0015:  MOVF   00,W
0016:  BTFSC  03.2
0017:  GOTO   026
0018:  MOVLW  01
0019:  MOVWF  78
001A:  CLRF   77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 78,F
001E:  GOTO   01A
001F:  MOVLW  4A
0020:  MOVWF  77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  GOTO   024
0024:  DECFSZ 00,F
0025:  GOTO   018
0026:  GOTO   03F (RETURN)
....................  
.................... BYTE CONST DISPLAY[10]= {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x67}; 
.................... #byte port_b = 0x06 
....................  
.................... void main() 
0027:  MOVF   03,W
0028:  ANDLW  1F
0029:  MOVWF  03
002A:  MOVLW  07
002B:  MOVWF  1F
002C:  BCF    03.7
.................... { 
....................    set_tris_b(0x00); 
002D:  MOVLW  00
002E:  BSF    03.5
002F:  MOVWF  06
....................      
....................    while(TRUE) { 
....................       for(int i = 0; i < 10; i++) { 
0030:  BCF    03.5
0031:  CLRF   21
0032:  MOVF   21,W
0033:  SUBLW  09
0034:  BTFSS  03.0
0035:  GOTO   043
....................          port_b = DISPLAY[i]; 
0036:  MOVF   21,W
0037:  CALL   004
0038:  MOVWF  78
0039:  MOVWF  06
....................          delay_ms(1000); 
003A:  MOVLW  04
003B:  MOVWF  22
003C:  MOVLW  FA
003D:  MOVWF  23
003E:  GOTO   012
003F:  DECFSZ 22,F
0040:  GOTO   03C
0041:  INCF   21,F
0042:  GOTO   032
....................       } 
0043:  GOTO   031
....................    } 
.................... } 
0044:  SLEEP

Configuration Fuses:
   Word  1: 3F41   NOWDT PUT XT NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
